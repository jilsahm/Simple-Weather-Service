plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'java'
    id 'com.github.johnrengelman.shadow' version '5.0.0'
}

sourceSets {
    main {
        java.srcDir "main/java"
    }
    test{
        java.srcDir "test/java"
    }
}

test {
    testLogging {
        showStandardStreams = true
    }
    useJUnitPlatform()
}

jar {
    manifest {
        attributes("Implementation-Title": "Simple-Weather-Service",
                   "Implementation-Version": 0.1,
                   //'Main-Class': 'https.HttpsConnector')
                   'Main-Class': 'database.DatabaseAPI')
                   //'Main-Class': 'util.PathHolder')
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'
    implementation 'org.xerial:sqlite-jdbc:3.25.2'
    
    // Object Db
    implementation 'com.objectdb:objectdb:+'
    implementation 'org.eclipse.persistence:javax.persistence:+'
    implementation 'javax.transaction:jta:+'

    // Use JUnit test framework
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.+'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.+'
}

// In this section you declare where to find the dependencies of your project
repositories {
    maven {
      url 'http://m2.objectdb.com'
    }
    mavenCentral()
}

compileJava.options.encoding = 'cp1252'
compileTestJava.options.encoding = 'cp1252'
javadoc.options.encoding = 'cp1252'
